; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=5

[application]

config/name="Scorejam"
run/main_scene="res://menu/main_menu/main_menu.tscn"
config/features=PackedStringArray("4.3")
run/max_fps=120
config/icon="res://icon.svg"

[autoload]

Leaderboards="*res://addons/quiver_leaderboards/leaderboards.tscn"
PlayerAccounts="*res://addons/quiver_player_accounts/player_accounts.tscn"
MusicPlayer="*res://music_player/music_player.tscn"
LeaderboardGlobal="*res://game/leaderboard_global.gd"
GlobalSounds="*res://audio/global_sounds.tscn"

[display]

window/size/viewport_width=3840
window/size/viewport_height=2160
window/size/always_on_top=true
window/size/window_width_override=1920
window/size/window_height_override=1080
window/stretch/mode="canvas_items"
window/size/always_on_top.release=false

[editor_plugins]

enabled=PackedStringArray("res://addons/gdscript_formatter/plugin.cfg", "res://addons/quiver_leaderboards/plugin.cfg", "res://addons/quiver_player_accounts/plugin.cfg")

[global_group]

player="Contains the player"
game_manager=""

[gui]

theme/custom="res://default_theme.tres"

[importer_defaults]

wav={
"compress/mode": 2,
"edit/loop_begin": 0,
"edit/loop_end": -1,
"edit/loop_mode": 0,
"edit/normalize": false,
"edit/trim": false,
"force/8_bit": false,
"force/max_rate": false,
"force/max_rate_hz": 44100,
"force/mono": false
}

[input]

bird={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":67,"key_label":0,"unicode":99,"location":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":4194319,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
]
}
fish={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":4194320,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":88,"key_label":0,"unicode":120,"location":0,"echo":false,"script":null)
]
}
phoenix={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":4194321,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":90,"key_label":0,"unicode":122,"location":0,"echo":false,"script":null)
]
}
restart={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":82,"key_label":0,"unicode":114,"location":0,"echo":false,"script":null)
]
}

[physics]

common/physics_ticks_per_second=120

[rendering]

renderer/rendering_method="gl_compatibility"
renderer/rendering_method.mobile="gl_compatibility"
viewport/hdr_2d=true

[shader_globals]

camera_zoom={
"type": "float",
"value": 0.0
}
camera_offset={
"type": "vec2",
"value": Vector2(0, 0)
}
